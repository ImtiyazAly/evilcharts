{
  "name": "glowing-radial-chart",
  "type": "registry:ui",
  "registryDependencies": [
    "chart"
  ],
  "dependencies": [
    "recharts",
    "lucide-react"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "glowing-radial-chart.tsx",
      "content": "\"use client\";\n\nimport { RadialBar, RadialBarChart, Cell } from \"recharts\";\nimport React from \"react\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingUp } from \"lucide-react\";\n\nconst chartData = [\n  { browser: \"chrome\", visitors: 275, fill: \"var(--color-chrome)\" },\n  { browser: \"safari\", visitors: 200, fill: \"var(--color-safari)\" },\n  { browser: \"firefox\", visitors: 187, fill: \"var(--color-firefox)\" },\n  { browser: \"edge\", visitors: 173, fill: \"var(--color-edge)\" },\n  { browser: \"other\", visitors: 90, fill: \"var(--color-other)\" },\n];\n\nconst chartConfig = {\n  visitors: {\n    label: \"Visitors\",\n  },\n  chrome: {\n    label: \"Chrome\",\n    color: \"var(--chart-1)\",\n  },\n  safari: {\n    label: \"Safari\",\n    color: \"var(--chart-2)\",\n  },\n  firefox: {\n    label: \"Firefox\",\n    color: \"var(--chart-3)\",\n  },\n  edge: {\n    label: \"Edge\",\n    color: \"var(--chart-4)\",\n  },\n  other: {\n    label: \"Other\",\n    color: \"var(--chart-5)\",\n  },\n} satisfies ChartConfig;\n\ntype ActiveBrowser = keyof typeof chartConfig | \"all\" | null;\n\nexport function GlowingRadialChart() {\n  const [activeBrowser, setActiveBrowser] = React.useState<ActiveBrowser>(null);\n\n  return (\n    <Card className=\"flex flex-col\">\n      <CardHeader className=\"items-center pb-0\">\n        <CardTitle>\n          Glowing Radial Chart\n          <Badge\n            variant=\"outline\"\n            className=\"text-green-500 bg-green-500/10 border-none ml-2\"\n          >\n            <TrendingUp className=\"h-4 w-4\" />\n            <span>5.2%</span>\n          </Badge>\n        </CardTitle>\n        <CardDescription>January - June 2024</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-1 pb-0\">\n        <ChartContainer\n          config={chartConfig}\n          className=\"mx-auto aspect-square max-h-[250px]\"\n        >\n          <RadialBarChart \n            data={chartData} \n            innerRadius={30} \n            outerRadius={110}\n            onMouseMove={(data) => {\n              if (data && data.activePayload && data.activePayload[0]) {\n                setActiveBrowser(data.activePayload[0].payload.browser);\n              }\n            }}\n            onMouseLeave={() => setActiveBrowser(null)}\n          >\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent hideLabel nameKey=\"browser\" />}\n            />\n            <RadialBar\n              cornerRadius={10}\n              dataKey=\"visitors\"\n              background\n              className=\"drop-shadow-lg\"\n            >\n              {chartData.map((entry, index) => (\n                <Cell \n                  key={`cell-${index}`} \n                  fill={entry.fill}\n                  filter={activeBrowser === entry.browser ? `url(#radial-glow-${entry.browser})` : undefined}\n                  opacity={activeBrowser === null || activeBrowser === entry.browser ? 1 : 0.3}\n                />\n              ))}\n            </RadialBar>\n            <defs>\n              {chartData.map((entry) => (\n                <filter\n                  key={`filter-${entry.browser}`}\n                  id={`radial-glow-${entry.browser}`}\n                  x=\"-50%\"\n                  y=\"-50%\"\n                  width=\"200%\"\n                  height=\"200%\"\n                >\n                  <feGaussianBlur stdDeviation=\"8\" result=\"blur\" />\n                  <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\n                </filter>\n              ))}\n            </defs>\n          </RadialBarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}
